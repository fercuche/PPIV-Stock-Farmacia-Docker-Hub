version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: farmacia_postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-farmacia_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-farmacia_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - farmacia_network

  # Backend Node.js (imagen desde Docker Hub)
  backend:
    image: fercuche/backefg-backend:latest
    container_name: farmacia_backend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-3000}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-farmacia_db}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-admin}
      JWT_SECRET: ${JWT_SECRET:-clave_secreta_jwt}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - farmacia_network

  # Frontend con Nginx (imagen desde Docker Hub)
  frontend:
    image: fercuche/backefg-frontend:latest
    container_name: farmacia_frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - farmacia_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  farmacia_network:
    driver: bridge
